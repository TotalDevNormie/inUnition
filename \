import React, { useEffect, useState } from 'react';
import {
  TextInput,
  View,
  StyleSheet,
  KeyboardAvoidingView,
  Platform,
} from 'react-native';
import {
  MarkdownStyle,
  MarkdownTextInput,
  parseExpensiMark,
} from '@expensify/react-native-live-markdown';
import { useNoteStore } from '../../utils/manageNotes';

export default function NoteInput({ uuid }: { uuid: string }) {
  const { notes, saveNote } = useNoteStore();
  const note = notes[uuid] || { uuid, title: '', content: '' };

  // Local state to handle inputs
  const [title, setTitle] = useState(note.title);
  const [content, setContent] = useState(note.content);

  // Whenever the note from the store changes (e.g. initial load)
  // update local state.
  useEffect(() => {
    setTitle(note.title || '');
    setContent(note.content || '');
  }, [note.title, note.content]);

  // Save note callback updating the store
  const handleTitleChange = (text: string) => {
    setTitle(text);
    saveNote({ ...note, uuid, title: text, content });
  };

  const handleContentChange = (text: string) => {
    setContent(text);
    saveNote({ ...note, uuid, title, content: text });
  };

  return (
    // KeyboardAvoidingView can help with the keyboard overlapping input fields
    <KeyboardAvoidingView
      style={{ flex: 1 }}
      behavior={Platform.OS === 'ios' ? 'padding' : undefined}
    >
      <View style={styles.container}>
        <TextInput
          value={title}
          onChangeText={handleTitleChange}
          style={styles.titleInput}
          placeholder="Title"
          placeholderTextColor="#888"
        />
        <View style={styles.separator} />
        <MarkdownTextInput
          value={content}
          onChangeText={handleContentChange}
          multiline
          textAlignVertical="top"
          parser={parseExpensiMark}
          markdownStyle={markdownStyle}
          style={styles.contentInput}
          placeholder="Content"
          placeholderTextColor="#888"
        />
      </View>
    </KeyboardAvoidingView>
  );
}

const markdownStyle: MarkdownStyle = {
  syntax: {
    color: '#E9F1EF',
  },
  link: {
    color: '#E9F1EF',
  },
  h1: {
    fontSize: 25,
  },
  emoji: {
    fontSize: 20,
  },
  blockquote: {
    borderColor: 'gray',
    borderWidth: 6,
    marginLeft: 6,
    paddingLeft: 6,
  },
  code: {
    fontSize: 20,
    color: '#E9F1EF',
    backgroundColor: '#313749',
  },
  pre: {
    fontSize: 20,
    color: '#E9F1EF',
    backgroundColor: 'lightgray',
  },
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    paddingHorizontal: 16,
    paddingVertical: 12,
  },
  titleInput: {
    fontSize: 20,
    color: '#E9F1EF',
    marginBottom: 8,
  },
  separator: {
    height: 2,
    backgroundColor: 'gray',
    marginVertical: 8,
  },
  contentInput: {
    flex: 1,
    borderWidth: 0,
    color: '#E9F1EF',
  },
});
